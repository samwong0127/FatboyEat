version: "3.3"

networks:
  default:
    name: project_gp5
  monitor:
    driver: bridge
  elk:
    driver: bridge

volumes:
  mongo_volume:
    name: mongo_vol
  prometheus_data: {}
  grafana_data: {}
  elasticsearch:

services:
  store:
    build: ./store
    depends_on:
      - mongo_store
    restart: always
    environment:
      # MONGODB_DATABASE: 
      MONGODB_USERNAME: store
      MONGODB_PASSWORD: 12345
      MONGO_SERVER_HOST: db_store
      MONGO_SERVER_PORT: '27017'
    # volumes:
    #   - ./store:/store
    ports:
      - "15002:15002"
    container_name: api_store
    networks:
      - elk

  order:
    build: ./order
    depends_on:
      - mongo_order
    restart: always
    environment:
      # MONGODB_DATABASE: 
      MONGODB_USERNAME: order
      MONGODB_PASSWORD: 12345
      MONGO_SERVER_HOST: db_order
      MONGO_SERVER_PORT: '27018'
    # volumes:
    #  - ./order:/order
    ports:
      - "15001:15001"
    container_name: api_order
    networks:
      - elk
    
  menu:
    build: ./menu
    depends_on:
      - mongo_menu
    restart: always
    environment:
      # MONGODB_DATABASE: 
      MONGODB_USERNAME: menu
      MONGODB_PASSWORD: 12345
      MONGO_SERVER_HOST: db_menu
      MONGO_SERVER_PORT: '27019'
    links:
      - mongo_menu
    # volumes:
    #     - ./menu:/menu
    ports:
      - "15000:15000"
    container_name: api_menu
    networks:
      - elk

  mongo_store:
    image: mongo
    container_name: db_store
    command: mongod --port 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: store
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./store/mongo-store-init.js:/docker-entrypoint-initdb.d/mongo-store-init.js
      - mongo_volume:/data/db_store
    networks:
      - elk

  mongo_order:
    image: mongo
    container_name: db_order
    command: mongod --port 27018
    environment:
      MONGO_INITDB_ROOT_USERNAME: order
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./order/mongo-order-init.js:/docker-entrypoint-initdb.d/mongo-order-init.js
      - mongo_volume:/data/db_order
    networks:
      - elk

  mongo_menu:
    image: mongo
    container_name: db_menu
    command: mongod --port 27019
    environment:
      MONGO_INITDB_ROOT_USERNAME: menu
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./menu/mongo-menu-init.js:/docker-entrypoint-initdb.d/mongo-menu-init.js
      - mongo_volume:/data/db_menu
    networks:
      - elk

  nginx:
    image: nginx
    volumes:
      # - ./nginx/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/config:/etc/nginx/conf.d
      - ./nginx/log:/var/log/nginx
    command: /bin/bash -c "nginx -g 'daemon off;'" 
    ports:
      - 20080:80
    depends_on:
      - menu
      - order
      - store
    networks:
      - elk

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000"
      - "9600:9600"
    expose: 
      - "5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  filebeat:
    build: ./filebeat
    entrypoint: "filebeat -e -strict.perms=false"
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./nginx/log:/var/log/nginx
    networks:
      - elk
    depends_on: 
      - menu
      - store
      - order
      - nginx
      - logstash
      - elasticsearch
      - kibana
    links: 
      - logstash

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      #- ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitor

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/var/lib/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - '9090:9090'
    networks:
      - monitor
